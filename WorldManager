package com.crafterscr.Multiverso;

import com.crafterscr.Multiverso.config.MultiversoConfigManager;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.server.MinecraftServer;
import net.minecraft.server.level.ServerLevel;
import net.minecraft.world.level.Level;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

public class WorldManager {
    private static WorldManager instance;
    private final Map<String, Level> loadedWorlds = new HashMap<>();

    private WorldManager() {}

    public static WorldManager getInstance() {
        if (instance == null) {
            instance = new WorldManager();
        }
        return instance;
    }

    public void addWorld(String name, Level world) {
        loadedWorlds.put(name.toLowerCase(), world);

        // Registrar en la configuración si es un ServerLevel
        if (world instanceof ServerLevel serverLevel) {
            MultiversoConfigManager.registerWorld(serverLevel);
        }
    }

    public Level getWorld(String name) {
        return loadedWorlds.get(name.toLowerCase());
    }

    public Set<String> getAvailableWorldNames() {
        return loadedWorlds.keySet();
    }

    public void removeWorld(String name) {
        loadedWorlds.remove(name.toLowerCase());
    }

    // Opcional: método para cargar mundos existentes al iniciar el servidor
    public void loadExistingWorlds(MinecraftServer server) {
        // Implementar si quieres cargar mundos al iniciar
    }
}
